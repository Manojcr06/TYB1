import  React, {useState, useRef, useEffect} from 'react';
import {Button, View, Text, StyleSheet, KeyboardAvoidingView} from 'react-native';
import { TextInput, TouchableOpacity } from 'react-native-gesture-handler';

export function SignUp({navigation}) {

    let textInput = useRef(null)
    const [phoneNumber, setPhoneNumber] = useState();
    const [focusInput, setFocusInput] = useState(true);

    const onChangePhone = (number) => {
        setPhoneNumber(number)
    }

    const onPressContinue = () => {
        if(phoneNumber) {
            navigation.navigate('InputOTPScreen')
        }
    }

    const onChangeFocus = () => {
        setFocusInput(true)
    }

    const onChangeBlur = () => {
        setFocusInput(false)
    }

    useEffect(() =>{
        textInput.focus()
    },[])
    return (
        <View style={styles.container}>
            <KeyboardAvoidingView
                keyboardVerticalOffset={50}
                behavior={'padding'}
                style = {styles.containerAvoidingView}>
                <Text style={styles.textTitle}>{" Please input your mobile number"}</Text>
                <View style={[
                    styles.containerInput,{
                        borderBottomColor : focusInput ? 'blue' : 'white'
                    }
                    
                    ]}>
                <View style={styles.openDialogView}>
                    <Text>{"+91 |"}</Text>
                </View>

                <TextInput
                ref={(input) => textInput = input}
                style ={styles.phoneInputStyle}
                placeholder="902 291 011"
                keyboardType="numeric"
                value={phoneNumber}
                onChangeText={onChangePhone}
                secureTextEntry={false}
                onFocus={onChangeFocus}
                onBlur={onChangeBlur}
                autoFocus={focusInput}
                />
             </View>

             <View style ={styles.viewBottom}>
                <TouchableOpacity onPress={onPressContinue}>
                <View style={
                    [styles.btnContinue,
                    {
                        backgroundColor: phoneNumber? 'blue' : 'grey'
                    }
                    
                    ]}>
                    <Text style={styles.textContinue}>Continue</Text>
                </View>
                </TouchableOpacity>

             </View>

            </KeyboardAvoidingView>
        </View>
    );
}

const styles = StyleSheet.create({
    container : {
        flex :1,
        
    },
    containerAvoidingView: {
        flex :1,
        alignItems : 'center',
        padding : 10
    },
    textTitle: {
        marginBottom : 50,
        marginTop : 50,
        fontSize : 16
    },
    containerInput:{
        flexDirection : 'row',
        paddingHorizontal : 12,
        borderRadius : 10,
        backgroundColor : "white",
        alignItems : 'center',
        borderBottomWidth : 1.5
    },
    openDialogView: {
        flexDirection : 'row',
        alignItems: 'center',
        justifyContent : 'center'
    },
    phoneInputStyle : {
        marginLeft : 5,
        flex : 1,
        height : 50
    },
    viewBottom : {
        flex : 1,
        justifyContent : 'center',
        marginBottom : 50,
        alignItems : 'center'
    },
    btnContinue : {
        width : 150,
        height : 50,
        borderRadius : 10,
        alignItems : 'center',
        justifyContent : 'center',
    
    },
    textContinue : {
        color: '#ffffff', 
        alignItems :'center'
    }

})








import React, {useState, useEffect, useRef} from 'react';
import {Button, View, Text,StyleSheet, KeyboardAvoidingView} from 'react-native';
import { TextInput, TouchableOpacity } from 'react-native-gesture-handler';

export function InputOTPScreen({navigation}) {
    let textInput = useRef(null)
    let clockCall = null
    const lengthInput = 6;
    const defaultCountdown =30;
    const [intervalVal, setIntervalVal ] = useState("")
    const [countdown, setCountdown]= useState(defaultCountdown)
    const [enableResend , setEnableResend]= useState(false)
    useEffect(() => {
            clockCall = setInterval(() => {
                decrementClock();
            }, 1000)
            return () => {
                clearInterval(clockCall)
            }
    })

    const decrementClock = () => {
        if(countdown === 0){
            setEnableResend(true)
            setCountdown(0)
            clearInterval(clockCall)
        }else {
            setCountdown(countdown -1)
        }
        
    }

const onChangeText = (val) => {
    setIntervalVal(val)

}

const onResendOTP =() => {
    if(enableResend){
        setCountdown(defaultCountdown)
        setEnableResend(false)
        clearInterval(clockCall)
        clockCall = setInterval(() => {
            decrementClock(0)
        }, 1000)
    }
}

const onChangeNumber =() => {
setIntervalVal("")
    if (val.length === lengthInput) {
        navigation.navigate('Login')
    }
}

useEffect(() => {
    textInput.focus()
},[])

    return (
        <View style={styles.container}>
            <KeyboardAvoidingView
            keyboardVerticalOffset={50}
            behavior={'padding'}
            style={styles.containerAvoidingView}
            >

            <Text style={styles.textTitle}>{" Input your OTP code sent via SMS"}</Text>
            <View>

                <TextInput
                ref={(input) => textInput = input}
                onChangeText={onChangeText}
                style={{width:0, height:0}}
                value={intervalVal}
                maxLength={lengthInput}
                returnKeyType="done"
                keyboardType="numeric"

                />
                <View style={styles.containerInput}>
                {
                    Array(lengthInput).fill().map((data, index) => (
                        <View 
                        key={index}
                        style={[
                            styles.cellView,
                            {
                                borderBottomColor : index === intervalVal.length ? '#FB6C6A':'#234DB7'
                            }
                            ]}
                        >
                    <Text 
                    style={styles.cellText}
                    onPress={() => textInput.focus()}
                    
                    >{intervalVal && intervalVal.length > 0 ? intervalVal[index] : ""}</Text>
                </View>
                    )) }
                

                </View>
            </View>
            <View style={styles.bottomView}>
            <TouchableOpacity onPress={onChangeNumber}>
                <View style={styles.btnChangeNumber}>
                <Text style ={styles.textChange}>Change number</Text>

                </View>
            </TouchableOpacity>
            <TouchableOpacity onPress ={onResendOTP}>
                <View style={styles.btnResend}>
                <Text style ={[
                    styles.textResend,
                    {
                        color : enableResend ? 'green' : 'gray'
                    }
                    ]}>Resend OTP(countdown)</Text>

                </View>
            </TouchableOpacity>

            </View>

            </KeyboardAvoidingView>
        </View>
    );
}

const styles = StyleSheet.create({
    container : {
        flex :1,
        
    },
    containerAvoidingView: {
        flex :1,
        alignItems : 'center',
        padding : 10
    },
    textTitle:{
        marginTop : 50,
        marginBottom : 50,
        fontSize : 16
    },
    containerInput:{
        flexDirection : 'row',
        alignItems : 'center',
        justifyContent : 'center'
    },
    cellView:{
        paddingVertical: 11,
        width : 40,
        margin : 5,
        justifyContent: 'center',
        alignItems : 'center',
        borderBottomWidth : 1.5
    },
    cellText:{
        textAlign: 'center',
        fontSize : 16
    },
    bottomView:{
        flexDirection: 'row',
        flex : 1,
        justifyContent : 'flex-end',
        marginBottom: 50,
        alignItems : 'center'
    },
    btnChangeNumber:{
        width : 150,
        height : 50,
        borderRadius: 10,
        alignItems: 'flex-start',
        justifyContent:'center'
    },
    textChange:{
        color: 'blue',
        alignItems: 'center',
        fontSize: 16
    },
    btnResend:{
        width : 150,
        height : 50,
        borderRadius: 10,
        alignItems: 'flex-end',
        justifyContent:'center'
    },
    textResend:{
        alignItems:'center',
        fontSize: 16
    }
})



import SignUp from './SignUp';
 SignUp:{screen:SignUp, navigationOptions:{headerShown:false}},

 import InputOTPScreen from './InputOTPScreen';
 navigation.navigate('InputOTPScreen')
 InputOTPScreen:{screen:InputOTPScreen, navigationOptions:{headerShown:false}}

  <Text style={{padding : 15}}>By continuing you are indicating that you agree to {'\n'}                   the Terms and Privacy Policy.</Text>